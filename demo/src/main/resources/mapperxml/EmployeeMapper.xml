<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.EmployeeMapper">
  <resultMap id="BaseResultMap" type="com.example.demo.entity.Employee">
    <!--@mbg.generated-->
    <!--@Table employee-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="sex" jdbcType="INTEGER" property="sex" />
    <result column="age" jdbcType="INTEGER" property="age" />
    <result column="department_id" jdbcType="BIGINT" property="departmentId" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="hobby" jdbcType="VARCHAR" property="hobby" />
    <result column="adress" jdbcType="VARCHAR" property="adress" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, `name`, sex, age, department_id, phone_number, hobby, adress
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--@mbg.generated-->
    select 
    <include refid="Base_Column_List" />
    from employee
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--@mbg.generated-->
    delete from employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.example.demo.entity.Employee">
    <!--@mbg.generated-->
    insert into employee (id, `name`, sex, 
      age, department_id, phone_number, 
      hobby, adress)
    values (#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{sex,jdbcType=INTEGER}, 
      #{age,jdbcType=INTEGER}, #{departmentId,jdbcType=BIGINT}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{hobby,jdbcType=VARCHAR}, #{adress,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.example.demo.entity.Employee">
    <!--@mbg.generated-->
    insert into employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="departmentId != null">
        department_id,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="hobby != null">
        hobby,
      </if>
      <if test="adress != null">
        adress,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        #{age,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null">
        #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="adress != null">
        #{adress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.example.demo.entity.Employee">
    <!--@mbg.generated-->
    update employee
    <set>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=INTEGER},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="departmentId != null">
        department_id = #{departmentId,jdbcType=BIGINT},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="hobby != null">
        hobby = #{hobby,jdbcType=VARCHAR},
      </if>
      <if test="adress != null">
        adress = #{adress,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.example.demo.entity.Employee">
    <!--@mbg.generated-->
    update employee
    set `name` = #{name,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=INTEGER},
      age = #{age,jdbcType=INTEGER},
      department_id = #{departmentId,jdbcType=BIGINT},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      hobby = #{hobby,jdbcType=VARCHAR},
      adress = #{adress,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="selectByPhoneNumber" resultType="int">
    select * from employee where phone_number=#{phoneNumber,jdbcType=VARCHAR}
  </select>

  <select id="selectSelective" resultMap="BaseResultMap">
    select * from employee where  1=1
    <if test="id!=null">
      and id = #{id}
    </if>
    <if test="name != null">
      and `name` = #{name,jdbcType=VARCHAR}
    </if>
    <if test="sex != null">
      and sex = #{sex,jdbcType=INTEGER}
    </if>
    <if test="age != null">
      and age = #{age,jdbcType=INTEGER}
    </if>
    <if test="departmentId != null">
      and department_id = #{departmentId,jdbcType=BIGINT}
    </if>
    <if test="phoneNumber != null">
      and phone_number = #{phoneNumber,jdbcType=VARCHAR}
    </if>
    <if test="hobby != null">
      and hobby = #{hobby,jdbcType=VARCHAR}
    </if>
    <if test="adress != null">
      and adress = #{adress,jdbcType=VARCHAR}
    </if>
  </select>
    <delete id="deleteByDepartId">
      delete from employee
      where department_id = #{id}
    </delete>
</mapper>